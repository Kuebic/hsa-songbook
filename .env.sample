# HSA Songbook Environment Configuration Template
# Copy this file to .env and fill in the actual values for your environment
# 
# SECURITY NOTE: Never commit your actual .env file to version control!
# This .env.sample file contains only safe placeholder values.

# ============================================================================
# FRONTEND VARIABLES (VITE_ prefixed for client-side access)
# ============================================================================

# Clerk Authentication - Get your publishable key from https://dashboard.clerk.com
# This key is safe to expose client-side and is required for authentication
# Format: pk_test_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
VITE_CLERK_PUBLISHABLE_KEY=pk_test_REPLACE_WITH_YOUR_CLERK_PUBLISHABLE_KEY

# ============================================================================
# SERVER CONFIGURATION
# ============================================================================

# Application Environment
# Options: development | production | test
NODE_ENV=development

# Server Port
# Default: 5000 for development
PORT=5000

# Frontend URL for CORS and redirects
# Development: http://localhost:5173 (Vite default)
# Production: Your deployed frontend URL
FRONTEND_URL=http://localhost:5173

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================

# MongoDB Connection String
# For local development: mongodb://localhost:27017/hsa-songbook-dev
# For MongoDB Atlas: mongodb+srv://username:password@cluster.mongodb.net/hsa-songbook?retryWrites=true&w=majority&appName=hsa-songbook-react
# 
# IMPORTANT: Replace username, password, and cluster details with your actual values
# The database name 'hsa-songbook' will be automatically appended for production
MONGODB_URI=mongodb://localhost:27017/hsa-songbook-dev

# ============================================================================
# SECURITY CONFIGURATION
# ============================================================================

# JWT Secret Key for signing authentication tokens
# CRITICAL: Use a strong, randomly generated secret in production
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=REPLACE_WITH_STRONG_RANDOM_SECRET

# JWT Token Expiration Time
# Examples: 7d (7 days), 24h (24 hours), 1h (1 hour)
JWT_EXPIRES_IN=7d

# ============================================================================
# RATE LIMITING CONFIGURATION
# ============================================================================

# Maximum number of requests per IP within the time window
# Recommended: 100 for development, adjust based on your needs
RATE_LIMIT_MAX=100

# Rate limiting time window in milliseconds
# Default: 900000 (15 minutes)
RATE_LIMIT_WINDOW_MS=900000

# ============================================================================
# COMPRESSION CONFIGURATION
# ============================================================================

# ZSTD Compression Level (1-19, higher = better compression but slower)
# Recommended: 10 for balanced performance and compression
ZSTD_COMPRESSION_LEVEL=10

# ============================================================================
# SETUP INSTRUCTIONS
# ============================================================================
#
# 1. Copy this file: cp .env.sample .env
# 2. Fill in your actual values in the .env file
# 3. For Clerk: Sign up at https://clerk.com and get your publishable key
# 4. For MongoDB: Set up a local MongoDB or use MongoDB Atlas
# 5. For JWT_SECRET: Generate a secure random string (see comment above)
# 6. Verify configuration by running: npm run validate-env (if available)
#
# Remember: Never commit the .env file to version control!